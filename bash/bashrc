alias open=xdg-open
## Aliases


mcd(){
    mkdir -p $1
    cd $1	
}

vims(){
    vim $1
    source $1
}


gitcd(){
	if [ $# -eq 2 ]
	then 
		git clone $1 $2		
		cd $2
	else
        git clone $1
	    to_cd=`echo $1 | sed 's/\//\n/g' | awk END{print} | sed 's/\./\n/g' | head -1`
        cd $to_cd
	fi
	
}

title(){
	temp=`python3 -c "print('$1'.title())"`
    echo $temp | xclip -selection clipboard
}

small(){
	temp=`python3 -c "print('$1'.lower())"`
    echo $temp | xclip -selection clipboard
}

cpfile(){
    cat $1 | xclip -selection clipboard
}

download-length(){
    length_bytes=`curl -sI $1| grep -i Content-Length | awk '{print $2}'`
    python3 -c "print('{} MB'.format(round($length_bytes/1024/1024,1)))"
}

ntimes(){
    if [ $# -le 1 ]
    then
        echo "error: Not enough arguments"
        echo "usage: ntimes command times"
    fi
    for ((c=0; c<$2; c++)) 
    do
        $1
    done
}

up(){
    ntimes "cd .." $1
}

netcheck(){
    ping 1.1.1.1
}

copyout(){
    $1 &> /tmp/pk_temp
    cpfile /tmp/pk_temp
    rm /tmp/pk_temp

}

cpcmd(){
    echo $1 | xclip -selection clipboard
}

cpp_ast_dump(){
    clang++ -Xclang -ast-dump -fsyntax-only $1
}

cuda_ast_dump(){
    clang++-9 -Xclang -ast-dump -fsyntax-only --cuda-gpu-arch=sm_50 $1
}

cuda_clang(){
    source=$1
    shift
    clang++-9 --cuda-gpu-arch=sm_50 -L /usr/local/cuda-9.0/lib64/ -lcudart $source $@
}

getLatest(){
    result=(`ls -t $1`)
    echo $1/$result
}

git_size(){
    user=`echo $1 | sed 's/\// /g' | awk '{print $(NF-1)}'`
    repo=`echo $1 | sed 's/\//\n/g' | awk END{print} | sed 's/\./\n/g' | head -1`
    result=`curl -s https://api.github.com/repos/$user/$repo | grep -Po "\"size\": \K([\d]*)"`
    python3 -c "print($result / 1024, 'MB')" 
}

bash_map(){
    job=$1
    files=$2
    echo $files 
}

# Custom function